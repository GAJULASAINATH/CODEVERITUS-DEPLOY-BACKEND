name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image
        run: docker build -t sainathdev7/codeveritus-backend:latest .
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push Docker Image
        run: docker push sainathdev7/codeveritus-backend:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      PORT: ${{ secrets.PORT }}
      CORE_API: ${{ secrets.CORE_API }}
      SALTROUNDS: ${{ secrets.SALTROUNDS }}
      JWT_SECRET_TOKEN: ${{ secrets.JWT_SECRET_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Docker Compose Up (passing envs)
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-201-23-59.ap-south-1.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/codeveritus-deploy
            docker-compose down -v --remove-orphans backend || true
            docker rm -f codeveritus-backend || true
            docker-compose pull backend
            docker-compose up -d --force-recreate backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          PORT: ${{ secrets.PORT }}
          CORE_API: ${{ secrets.CORE_API }}
          SALTROUNDS: ${{ secrets.SALTROUNDS }}
          JWT_SECRET_TOKEN: ${{ secrets.JWT_SECRET_TOKEN }}
